"use strict";function _classCallCheck(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}angular.module("app",["ngAnimate","ngMaterial","ngMessages","ui.router"]),function(){function t(t,i,e){this.$scope=t,this.$http=i,this.config=e,this.dgConfig={width:500,height:500,radius:110,stepRadius:15},this.init()}t.$inject=["$scope","$http","configFactory"],angular.module("app").controller("mainCtrl",t),t.prototype.init=function(){var t=this;this.$http.get(this.config.fixtures+"countries.json").then(function(i){t.countries=i.data,t.cNum=0}),this.$http.get(this.config.fixtures+"otherinfo.json").then(function(i){t.info2=i.data,t.iNum=0})},t.prototype.setCountry=function(t,i){t.preventDefault(),this.cNum=i},t.prototype.setInfo2Item=function(t,i){t.preventDefault(),this.iNum=i},t.prototype.callbackClick=function(t){console.log("---=== item ===---",t)}}(),function(){angular.module("app").factory("configFactory",function(){var t={fixtures:"./src/fixtures/",components:"./src/components/"};return{fixtures:t.fixtures,components:t.components}})}(),function(){angular.module("app").factory("ngDgPresetsFactory",function(){var t=500,i=500,e={pathColors:{0:"#f58a41",1:"#f0d367",2:"#e64d1b"},svgWidth:t,svgHeight:i,svgStyles:{width:t,height:i,fill:"blue"},svgWrapStyles:{width:t+"px",height:i+"px",overflow:"hidden"},radius:155,animateTime:500,animateStep:1,sRadius:30};return{pathColors:e.pathColors,svgWidth:e.svgWidth,svgHeight:e.svgHeight,svgStyles:e.svgStyles,svgWrapStyles:e.svgWrapStyles,radius:e.radius,animateTime:e.animateTime,animateStep:e.animateStep,sRadius:e.sRadius}})}(),function(){angular.module("app").config(["$stateProvider","$urlRouterProvider",function(t,i){var e="./src/components/";i.otherwise("/");var n={main:{templateUrl:e+"main/index.html"}};t.state("home",{url:"/",views:n})}])}();var _createClass=function(){function t(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(i,e,n){return e&&t(i.prototype,e),n&&t(i,n),i}}();!function(){angular.module("app").service("ngDgService",function(){return new t});var t=function(){function t(){_classCallCheck(this,t)}return _createClass(t,[{key:"calculateAbsCoord",value:function(t,i,e){var n=[];return t>=0&&t<90?(n[0]=i.x+Math.abs(e*+Math.sin(t*Math.PI/180).toPrecision(10)),n[1]=i.y-Math.abs(e*+Math.cos(t*Math.PI/180).toPrecision(10))):t>=90&&t<180?(n[0]=i.x+Math.abs(e*+Math.sin(t*Math.PI/180).toPrecision(10)),n[1]=i.y+Math.abs(e*+Math.cos(t*Math.PI/180).toPrecision(10))):t>=180&&t<270?(n[0]=i.x-Math.abs(e*+Math.sin(t*Math.PI/180).toPrecision(10)),n[1]=i.y+Math.abs(e*+Math.cos(t*Math.PI/180).toPrecision(10))):t>=270&&t<=360&&(n[0]=i.x-Math.abs(e*+Math.sin(t*Math.PI/180).toPrecision(10)),n[1]=i.y-Math.abs(e*+Math.cos(t*Math.PI/180).toPrecision(10))),n}},{key:"createCircles",value:function(t){for(var i=[],e=t.sRadius;e<t.width;e+=t.sRadius)i.push({center:{x:t.width/2,y:t.height/2},radius:e});return i}}]),t}()}(),function(){function t(t,i,e,n){var a=this;this.$scope=t,this.$timeout=e,this.ngDgService=n,this.pathClick||(this.pathClick=function(){console.log("Коллбек по клику не задан")}),this.prs=i,this.$scope.$watch(function(){return a.data},function(t){t&&a.init()}),this.$scope.$watchGroup([function(){return a.width},function(){return a.height},function(){return a.radius},function(){return a.stepRadius}],function(){a.init()})}t.$inject=["$scope","ngDgPresetsFactory","$timeout","ngDgService"],angular.module("app").controller("ngDiagrammCtrl",t),angular.module("app").directive("ngDiagramm",["configFactory",function(i){function e(t,i,e,n){}var n="ngDiagramm";return{link:e,scope:{},templateUrl:i.components+n+"/"+n+".html",controller:t,controllerAs:"dg",bindToController:{data:"=?",styles:"=?",width:"@?",height:"@?",radius:"@?",stepRadius:"@?",pathClickCb:"=?",ctx:"=?",name:"@?"}}}]),t.prototype.init=function(){this.pathes=[],this.circles=[];var t={width:+this.width||this.prs.svgWidth,height:+this.height||this.prs.svgHeight,radius:+this.radius||this.prs.radius,sRadius:+this.stepRadius||this.prs.sRadius,center:{x:(+this.width||this.prs.svgWidth)/2,y:(+this.height||this.prs.svgHeight)/2}};this.pathes&&this.pathes.length&&(this.pathes.length=0),this.circles=this.ngDgService.createCircles(t);var i=[],e=[];for(var n in this.data.data)i.push({value:this.data.data[n].value,text:this.data.data[n].text});for(var a=0,s=0;s<i.length;s+=1){for(var r=0,o=0;o<i.length;o+=1)i[s].value<i[o].value&&(r+=1);e.push({a1:3.6*a,a2:3.6*(a+i[s].value),text:i[s].text,value:i[s].value,sRadius:r}),a+=i[s].value}this.pathLength=e.length;for(var u=0;u<e.length;u+=1){var c={x1:"",y1:"",x2:"",y2:""},h=this.ngDgService.calculateAbsCoord(e[u].a1,t.center,t.radius-e[u].sRadius*t.sRadius);c.x1=h[0],c.y1=h[1],h=this.ngDgService.calculateAbsCoord(e[u].a2,t.center,t.radius-e[u].sRadius*t.sRadius),c.x2=h[0],c.y2=h[1];for(var l in c)c[l]=Math.round(c[l]);var g=this.ngDgService.calculateAbsCoord((e[u].a1+e[u].a2)/2,t.center,(t.radius-u*t.sRadius)/2),p={id:"g_"+(u+1),color:this.prs.pathColors[e[u].sRadius],value:e[u].value,text:e[u].text,radius:t.radius-e[u].sRadius*t.sRadius,showTooltip:!1,angle:{start:e[u].a1,end:e[u].a2},startPos:{x:c.x1,y:c.y1},endPos:{x:c.x2,y:c.y2},textPosition:{x:g[0],y:g[1]}};this.pathes.push(p),this.pathAnimation(this.pathes[u],t,u)}},t.prototype.pathAnimation=function(t,i,e){var n=this,a=t.angle.start,s=this.prs.animateTime/((t.angle.end-t.angle.start)/this.prs.animateStep);setTimeout(function(){t.showTooltip=t.angle.end-t.angle.start>15},500);var r=setTimeout(function o(){if(a>=t.angle.end)return clearTimeout(r),n.pathLength-1==e&&(n.watcherAccess=!0),!1;a+=n.prs.animateStep,a>t.angle.end&&(a=t.angle.end),t.flag=a-t.angle.start<=180?0:1;var u=n.ngDgService.calculateAbsCoord(a,i.center,t.radius);t.settings="M "+i.center.x+","+i.center.y+" L "+t.startPos.x+","+t.startPos.y+" A"+t.radius+","+t.radius+" 0 "+t.flag+", 1 "+u[0]+","+u[1],r=setTimeout(o,s),n.$scope.$digest()},s)},t.prototype.pathClick=function(t,i){t.preventDefault(),this.pathClickCb.call(this.ctx,i)}}(),function(){angular.module("app").directive("ngR",function(){return function(t,i,e){e.$observe("ngR",function(t){i.attr("r",t)})}}).directive("ngCx",function(){return function(t,i,e){e.$observe("ngCx",function(t){i.attr("cx",t)})}}).directive("ngX",function(){return function(t,i,e){e.$observe("ngX",function(t){i.attr("x",t)})}}).directive("ngY",function(){return function(t,i,e){e.$observe("ngY",function(t){i.attr("y",t)})}}).directive("ngCy",function(){return function(t,i,e){e.$observe("ngCy",function(t){i.attr("cy",t)})}}).directive("ngD",function(){return function(t,i,e){e.$observe("ngD",function(t){i.attr("d",t)})}}).directive("ngFill",function(){return function(t,i,e){e.$observe("ngFill",function(t){i.attr("fill",t)})}})}();
//# sourceMappingURL=data:application/json;base64,
