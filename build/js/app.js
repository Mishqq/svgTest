"use strict";angular.module("app",["ngAnimate","ngMaterial","ngMessages","ui.router"]),function(){function t(t,e,n){this.$scope=t,this.$http=e,this.config=n,this.init()}t.$inject=["$scope","$http","configFactory"],angular.module("app").controller("mainCtrl",t),t.prototype.init=function(){var t=this;this.$http.get(this.config.fixtures+"countries.json").then(function(e){t.countries=e.data,t.dataForDiagramm=t.countries[0]})},t.prototype.setCountry=function(t,e){t.preventDefault(),console.log("---ΞΞΞΞ- country -ΞΞΞΞ---",e),this.dataForDiagramm=e}}(),function(){angular.module("app").factory("configFactory",function(){var t={fixtures:"./src/fixtures/",components:"./src/components/"};return{fixtures:t.fixtures,components:t.components}})}(),function(){angular.module("app").factory("ngDgPresetsFactory",function(){var t=500,e=500,n={pathColors:{0:"#f58a41",1:"#f0d367",2:"#e64d1b"},svgWidth:t,svgHeight:e,svgStyles:{width:t,height:e,fill:"blue"},radius:150,animateTime:500,animateStep:1};return{pathColors:n.pathColors,svgWidth:n.svgWidth,svgHeight:n.svgHeight,svgStyles:n.svgStyles,radius:n.radius,animateTime:n.animateTime,animateStep:n.animateStep}})}(),function(){angular.module("app").config(["$stateProvider","$urlRouterProvider",function(t,e){var n="./src/components/";e.otherwise("/");var a={main:{templateUrl:n+"main/index.html"}};t.state("home",{url:"/",views:a})}])}(),function(){function t(t,e,n,a){this.$scope=t,this.$element=e,this.$compile=n,this.prs=a,this.init()}t.$inject=["$scope","$element","$compile","ngDgPresetsFactory"],angular.module("app").controller("ngDiagrammCtrl",t),angular.module("app").directive("ngDiagramm",["configFactory",function(e){function n(t,e,n){}var a="ngDiagramm";return{link:n,scope:{},templateUrl:e.components+a+"/"+a+".html",controller:t,controllerAs:"dg",bindToController:{settings:"=?",data:"=?",styles:"=?",pathClick:"=?",ctx:"=?"}}}]),t.prototype.init=function(){var t=this;this.pathes=[],this.circles=[];var e={width:this.prs.svgWidth,height:this.prs.svgHeight,radius:this.prs.radius,center:{x:this.prs.svgWidth/2,y:this.prs.svgHeight/2}};this.$scope.$watch(function(){return t.data},function(n){if(n){t.pathes&&t.pathes.length&&(t.pathes.length=0),e.radius=t.prs.radius,t.circles.length||t.createCircles(e);var a=[],i=[];for(var r in n.data)a.push({value:n.data[r].value,text:n.data[r].text});for(var o=0,s=0;s<a.length;s+=1){for(var c=0,u=0;u<a.length;u+=1)a[s].value<a[u].value&&(c+=1);i.push({a1:3.6*o,a2:3.6*(o+a[s].value),text:a[s].text,value:a[s].value,cutRadius:c}),o+=a[s].value}for(var l=0;l<i.length;l+=1){var h={x1:"",y1:"",x2:"",y2:""},g=t.calculateAbsCoord(i[l].a1,e.center,e.radius-20*i[l].cutRadius);h.x1=g[0],h.y1=g[1],g=t.calculateAbsCoord(i[l].a2,e.center,e.radius-20*i[l].cutRadius),h.x2=g[0],h.y2=g[1];for(var p in h)h[p]=Math.round(h[p]);var d=t.calculateAbsCoord((i[l].a1+i[l].a2)/2,e.center,(e.radius-20*l)/2),f={id:"g_"+(l+1),color:t.prs.pathColors[i[l].cutRadius],value:i[l].value,text:i[l].text,radius:e.radius-20*i[l].cutRadius,showTooltip:i[l].a2-i[l].a1>15,angle:{start:i[l].a1,end:i[l].a2},startPos:{x:h.x1,y:h.y1},endPos:{x:h.x2,y:h.y2},textPosition:{x:d[0],y:d[1]}};t.pathes.push(f),t.pathAnimation(t.pathes[l],e)}}})},t.prototype.calculateAbsCoord=function(t,e,n){var a=[];return t>=0&&t<90?(a[0]=e.x+Math.abs(n*+Math.sin(t*Math.PI/180).toPrecision(10)),a[1]=e.y-Math.abs(n*+Math.cos(t*Math.PI/180).toPrecision(10))):t>=90&&t<180?(a[0]=e.x+Math.abs(n*+Math.sin(t*Math.PI/180).toPrecision(10)),a[1]=e.y+Math.abs(n*+Math.cos(t*Math.PI/180).toPrecision(10))):t>=180&&t<270?(a[0]=e.x-Math.abs(n*+Math.sin(t*Math.PI/180).toPrecision(10)),a[1]=e.y+Math.abs(n*+Math.cos(t*Math.PI/180).toPrecision(10))):t>=270&&t<=360&&(a[0]=e.x-Math.abs(n*+Math.sin(t*Math.PI/180).toPrecision(10)),a[1]=e.y-Math.abs(n*+Math.cos(t*Math.PI/180).toPrecision(10))),a},t.prototype.createCircles=function(t){for(var e=30;e<t.width;e+=30)this.circles.push({center:{x:t.width/2,y:t.height/2},radius:e})},t.prototype.pathAnimation=function(t,e){var n=this,a=t.angle.start,i=this.prs.animateTime/((t.angle.end-t.angle.start)/this.prs.animateStep),r=setTimeout(function o(){if(a>=t.angle.end)return clearTimeout(r),!1;a+=n.prs.animateStep,a>t.angle.end&&(a=t.angle.end),t.flag=a-t.angle.start<=180?0:1;var s=n.calculateAbsCoord(a,e.center,t.radius);t.settings="M "+e.center.x+","+e.center.y+" L "+t.startPos.x+","+t.startPos.y+" A"+t.radius+","+t.radius+" 0 "+t.flag+", 1 "+s[0]+","+s[1],r=setTimeout(o,i),n.$scope.$digest()},i)},t.prototype.pathClick=function(t,e){t.preventDefault(),console.log("---=== item ===---",e)}}(),function(){angular.module("app").directive("ngR",function(){return function(t,e,n){n.$observe("ngR",function(t){e.attr("r",t)})}}).directive("ngCx",function(){return function(t,e,n){n.$observe("ngCx",function(t){e.attr("cx",t)})}}).directive("ngX",function(){return function(t,e,n){n.$observe("ngX",function(t){e.attr("x",t)})}}).directive("ngY",function(){return function(t,e,n){n.$observe("ngY",function(t){e.attr("y",t)})}}).directive("ngCy",function(){return function(t,e,n){n.$observe("ngCy",function(t){e.attr("cy",t)})}}).directive("ngD",function(){return function(t,e,n){n.$observe("ngD",function(t){e.attr("d",t)})}}).directive("ngFill",function(){return function(t,e,n){n.$observe("ngFill",function(t){e.attr("fill",t)})}})}();
//# sourceMappingURL=data:application/json;base64,
